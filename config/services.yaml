# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Exception\ExceptionHandlerAggregator:
        arguments:
            $exceptionHandlers: 
                - '@App\Exception\GenericExceptionHandler'
                - '@App\Exception\HttpExceptionHandler'
                - '@App\Exception\ServiceExceptionHandler'
                - '@App\Exception\NotFoundExceptionHandler'
    App\EventListener\ExceptionListener:
        arguments:
            $aggregator: '@App\Exception\ExceptionHandlerAggregator'
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\Filter\CompetenciesFilter\CompetenciesFilterAggregator:
        arguments:
            $competenciesHandlers:
                - '@App\Filter\CompetenciesFilter\StrictCompetenciesStrategy' 
                - '@App\Filter\CompetenciesFilter\AtLeastOneCompetencyStrategy' 
    App\Filter\ItGuysWithCompetenciesFilter:
        arguments:
            $aggregator: '@App\Filter\CompetenciesFilter\CompetenciesFilterAggregator'   
    App\Service\DateUtilityService: ~        
    App\Filter\Search\Asap:
        arguments:
            $dateUtilityService: '@App\Service\DateUtilityService' 
        public : true
    App\Filter\Search\LastAvailable:
        arguments:
            $dateUtilityService: '@App\Service\DateUtilityService' 
        public : true            
    App\Filter\Search\Factory\AvailableTermsFactory:
        arguments:
            $container: '@service_container'
            $searchTypeMap:
                'asap': 'App\Filter\Search\Asap'
                'last-available': 'App\Filter\Search\LastAvailable'
        public : true        
                                           
